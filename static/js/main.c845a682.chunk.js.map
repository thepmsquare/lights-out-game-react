{"version":3,"sources":["LightsOut.js","App.js","serviceWorker.js","index.js"],"names":["LightsOut","props","changeColor","e","clickedRow","parseInt","target","getAttribute","clickedColumn","newStatus","state","status","index1","findIndex","element","pos","index2","index3","index4","index5","on","every","ele","setState","win","newPuzzle","numBoxesArray","map","num","join","Math","random","prob","gridDim","i","j","push","className","this","index","style","gridRow","gridColumn","height","width","key","data-row","data-column","data-index","onClick","Component","App","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c845a682.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./stylesheets/LightsOut.css\";\r\n\r\nclass LightsOut extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gridDim = props.gridDim;\r\n    this.numBoxesArray = [];\r\n    for (let i = 1; i <= this.gridDim; i++) {\r\n      for (let j = 1; j <= this.gridDim; j++) {\r\n        this.numBoxesArray.push([i, j]);\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      status: this.numBoxesArray.map((num) => {\r\n        return {\r\n          pos: num.join(\"\"),\r\n          on: Math.random() > props.prob ? false : true,\r\n        };\r\n      }),\r\n      win: false,\r\n    };\r\n  }\r\n\r\n  changeColor = (e) => {\r\n    const clickedRow = parseInt(e.target.getAttribute(\"data-row\"));\r\n    const clickedColumn = parseInt(e.target.getAttribute(\"data-column\"));\r\n    const newStatus = [...this.state.status];\r\n    let index1 = newStatus.findIndex((element) => {\r\n      return element.pos === `${clickedRow}${clickedColumn}`;\r\n    });\r\n    let index2 = newStatus.findIndex((element) => {\r\n      return element.pos === `${clickedRow + 1}${clickedColumn}`;\r\n    });\r\n    let index3 = newStatus.findIndex((element) => {\r\n      return element.pos === `${clickedRow - 1}${clickedColumn}`;\r\n    });\r\n    let index4 = newStatus.findIndex((element) => {\r\n      return element.pos === `${clickedRow}${clickedColumn + 1}`;\r\n    });\r\n    let index5 = newStatus.findIndex((element) => {\r\n      return element.pos === `${clickedRow}${clickedColumn - 1}`;\r\n    });\r\n    if (index1 >= 0) {\r\n      newStatus[index1].on === true\r\n        ? (newStatus[index1].on = false)\r\n        : (newStatus[index1].on = true);\r\n    }\r\n\r\n    if (index2 >= 0) {\r\n      newStatus[index2].on === true\r\n        ? (newStatus[index2].on = false)\r\n        : (newStatus[index2].on = true);\r\n    }\r\n\r\n    if (index3 >= 0) {\r\n      newStatus[index3].on === true\r\n        ? (newStatus[index3].on = false)\r\n        : (newStatus[index3].on = true);\r\n    }\r\n\r\n    if (index4 >= 0) {\r\n      newStatus[index4].on === true\r\n        ? (newStatus[index4].on = false)\r\n        : (newStatus[index4].on = true);\r\n    }\r\n\r\n    if (index5 >= 0) {\r\n      newStatus[index5].on === true\r\n        ? (newStatus[index5].on = false)\r\n        : (newStatus[index5].on = true);\r\n    }\r\n    if (\r\n      newStatus.every((ele) => {\r\n        return ele.on === false;\r\n      })\r\n    ) {\r\n      this.setState({\r\n        win: true,\r\n        status: newStatus,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        status: newStatus,\r\n      });\r\n    }\r\n  };\r\n  newPuzzle = () => {\r\n    this.setState({\r\n      status: this.numBoxesArray.map((num) => {\r\n        return {\r\n          pos: num.join(\"\"),\r\n          on: Math.random() > this.props.prob ? false : true,\r\n        };\r\n      }),\r\n      win: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"LightsOut\">\r\n        <h1 className=\"LightsOut-Header\">Lights Out</h1>\r\n        <div className=\"LightsOut-Boxes\">\r\n          {this.numBoxesArray.map((num, index) => {\r\n            return (\r\n              <div\r\n                className={\r\n                  this.state.status[index].on\r\n                    ? \"LightsOut-Box LightsOut-On\"\r\n                    : \"LightsOut-Box LightsOut-Off\"\r\n                }\r\n                style={{\r\n                  gridRow: num[0],\r\n                  gridColumn: num[1],\r\n                  height: 80 / this.gridDim + \"vmin\",\r\n                  width: 80 / this.gridDim + \"vmin\",\r\n                }}\r\n                key={index}\r\n                data-row={num[0]}\r\n                data-column={num[1]}\r\n                data-index={index}\r\n                onClick={this.changeColor}\r\n              ></div>\r\n            );\r\n          })}\r\n        </div>\r\n        {this.state.win ? <h1>You Win!</h1> : null}\r\n        <button onClick={this.newPuzzle} className=\"LightsOut-Button\">\r\n          Refresh Boxes?\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LightsOut;\r\n","import React, { Component } from \"react\";\nimport LightsOut from \"./LightsOut\";\nimport \"./stylesheets/App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <LightsOut gridDim={5} prob={0.25} />\n        <p>\n          <a href=\"https://www.youtube.com/watch?v=ffCWa3Cppk4\">\n            Solution (youtube link)\n          </a>\n        </p>\n        <p>\n          Thanks to{\" \"}\n          <a href=\"https://www.1001freefonts.com/search.php?d=1&q=Studio+Typo\">\n            Studio Typo\n          </a>{\" \"}\n          for the font{\" \"}\n          <a href=\"https://www.1001freefonts.com/typo-round.font\">Typo Round</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}